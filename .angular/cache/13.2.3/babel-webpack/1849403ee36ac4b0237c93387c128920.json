{"ast":null,"code":"import { OpenweathermapServiceService } from '../openweathermap-service.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/table\";\nimport * as i5 from \"../network-error-dialog/network-error-dialog.component\";\n\nfunction TableListComponent_table_0_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 9);\n    i0.ɵɵtext(1, \" Date\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TableListComponent_table_0_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r7.dt_txt, \" \");\n  }\n}\n\nfunction TableListComponent_table_0_th_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"th\", 9);\n    i0.ɵɵtext(1, \"Forecast in \");\n    i0.ɵɵelementStart(2, \"select\", 11);\n    i0.ɵɵlistener(\"change\", function TableListComponent_table_0_th_5_Template_select_change_2_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.selected($event);\n    });\n    i0.ɵɵelementStart(3, \"option\", 12);\n    i0.ɵɵtext(4, \"celsius\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"option\", 13);\n    i0.ɵɵtext(6, \" fahrenheit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TableListComponent_table_0_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r10.main.temp, \" \");\n  }\n}\n\nfunction TableListComponent_table_0_tr_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 14);\n  }\n}\n\nfunction TableListComponent_table_0_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 15);\n  }\n}\n\nfunction TableListComponent_table_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 2);\n    i0.ɵɵelementContainerStart(1, 3);\n    i0.ɵɵtemplate(2, TableListComponent_table_0_th_2_Template, 2, 0, \"th\", 4);\n    i0.ɵɵtemplate(3, TableListComponent_table_0_td_3_Template, 2, 1, \"td\", 5);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(4, 6);\n    i0.ɵɵtemplate(5, TableListComponent_table_0_th_5_Template, 7, 0, \"th\", 4);\n    i0.ɵɵtemplate(6, TableListComponent_table_0_td_6_Template, 2, 1, \"td\", 5);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵtemplate(7, TableListComponent_table_0_tr_7_Template, 1, 0, \"tr\", 7);\n    i0.ɵɵtemplate(8, TableListComponent_table_0_tr_8_Template, 1, 0, \"tr\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"dataSource\", ctx_r0.tableData);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"matHeaderRowDef\", ctx_r0.displayedColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matRowDefColumns\", ctx_r0.displayedColumns);\n  }\n}\n\nexport let TableListComponent = /*#__PURE__*/(() => {\n  class TableListComponent {\n    constructor(http, dialog, dialogRef) {\n      this.http = http;\n      this.dialog = dialog;\n      this.dialogRef = dialogRef; //variables for displaying data on the data and getting it from the service call\n\n      this.displayedColumns = ['date', 'forecast'];\n      this.dataSource = [];\n      this.tableArr = [];\n      this.tableData = []; //variables  needed to make the service call to openweathermap api\n\n      this.url = 'http://api.openweathermap.org/data/2.5';\n      this.apiKey = '0effe12c904287abc2c33d76b6c0b624';\n      this.loc = \"Cape Town\";\n      this.unit = \"metric\"; //variables to do logic on when to open dialogs\n\n      this.displayTable = true;\n      this.tempLimits = false;\n    }\n\n    ngOnInit() {\n      this.getCurrentWeather(this.loc);\n      this.getForecast(this.loc);\n    }\n\n    openNetworkDialog() {\n      const dialogRef = this.dialog.open(DialogElementsExampleDialog);\n      dialogRef.afterClosed().subscribe(result => {\n        console.log(`Dialog result: ${result}`);\n      });\n    }\n\n    getCurrentWeather(loc) {\n      return this.http.get(`${this.url}/weather?q=${loc}&appid=${this.apiKey}&units=metric`).subscribe(data => {\n        console.log(\"getCurrentWeather() success\");\n        this.currentTemp = data;\n\n        if (this.currentTemp.main.temp < 15 || this.currentTemp.main.temp > 25) {\n          this.tempLimits = true;\n          this.openNetworkDialog();\n        }\n\n        console.log(this.tempLimits);\n      }, err => {\n        console.log(\"getCurrentWeather() error\");\n        console.log(err);\n      });\n    }\n\n    getForecast(loc) {\n      return this.http.get(`${this.url}/forecast?q=${loc}&appid=${this.apiKey}&units=${this.unit}`).subscribe(data => {\n        console.log(\"getForecast() success\");\n        this.tempsArr = data;\n        this.tempList = this.tempsArr.list;\n        this.displayTable = true;\n        this.populateTableData(this.tempList);\n      }, err => {\n        console.log(\"getForecast() error\");\n        console.log(err);\n        this.displayTable = false;\n      });\n    }\n\n    populateTableData(data) {\n      var i;\n\n      for (i = 0; i < 40; i++) {\n        this.tableData.push(data[i]);\n      }\n\n      this.tableData = data;\n      console.log(this.tableData);\n    }\n\n    selected(event) {\n      if (event.target.value == 'celsius') {\n        this.unit = \"metric\";\n        this.getForecast(this.loc);\n      } else if (event.target.value == 'fahrenheit') {\n        this.unit = \"imperial\";\n        this.getForecast(this.loc);\n      }\n\n      console.log(event.target.value);\n    }\n\n  }\n\n  TableListComponent.ɵfac = function TableListComponent_Factory(t) {\n    return new (t || TableListComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i2.MatDialogRef));\n  };\n\n  TableListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TableListComponent,\n    selectors: [[\"app-table-list\"]],\n    features: [i0.ɵɵProvidersFeature([OpenweathermapServiceService])],\n    decls: 3,\n    vars: 2,\n    consts: [[\"mat-table\", \"\", \"class\", \"mat-elevation-z8\", 3, \"dataSource\", 4, \"ngIf\"], [3, \"showDialog\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"date\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"forecast\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"name\", \"cars\", \"id\", \"cars\", 3, \"change\"], [\"value\", \"celsius\"], [\"value\", \"fahrenheit\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n    template: function TableListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TableListComponent_table_0_Template, 9, 3, \"table\", 0);\n        i0.ɵɵelementStart(1, \"div\");\n        i0.ɵɵelement(2, \"app-network-error-dialog\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.displayTable);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"showDialog\", !ctx.displayTable);\n      }\n    },\n    directives: [i3.NgIf, i4.MatTable, i4.MatColumnDef, i4.MatHeaderCellDef, i4.MatHeaderCell, i4.MatCellDef, i4.MatCell, i4.MatHeaderRowDef, i4.MatHeaderRow, i4.MatRowDef, i4.MatRow, i5.NetworkErrorDialogComponent],\n    styles: [\"table[_ngcontent-%COMP%]{width:50%;text-align:center}\"]\n  });\n  return TableListComponent;\n})();\nexport let DialogElementsExampleDialog = /*#__PURE__*/(() => {\n  class DialogElementsExampleDialog {}\n\n  DialogElementsExampleDialog.ɵfac = function DialogElementsExampleDialog_Factory(t) {\n    return new (t || DialogElementsExampleDialog)();\n  };\n\n  DialogElementsExampleDialog.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DialogElementsExampleDialog,\n    selectors: [[\"dialog-elements-example-dialog\"]],\n    decls: 4,\n    vars: 0,\n    consts: [[\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"]],\n    template: function DialogElementsExampleDialog_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \"Temperature warning\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵtext(3, \"The current temperature is below 15 or above 25 degrees celsius\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2\n  });\n  return DialogElementsExampleDialog;\n})();","map":null,"metadata":{},"sourceType":"module"}